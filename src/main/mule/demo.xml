<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:sockets="http://www.mulesoft.org/schema/mule/sockets" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sockets http://www.mulesoft.org/schema/mule/sockets/current/mule-sockets.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="b4ebd771-2cb3-439e-b24f-66ee62cb12fe">
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="54a21675-4eb4-425c-ae39-4445324ac060" >
		<db:my-sql-connection host="localhost" port="3306" user="root" password="123456" database="test"/>
	</db:config>
	<apikit:config outboundHeadersMapName="outboundHeadersMapName" httpStatusVarName="httpStatus" doc:name="Router" doc:id="3a4bbbe7-a344-486d-b91a-e7c27bf59285" name="Router" raml="demoApi.raml" >
		<apikit:flow-mappings >
			<apikit:flow-mapping resource="/login" action="post" content-type="application/json" flow-ref="demoFlow" />
			<apikit:flow-mapping resource="/login" action="post" content-type="application/json" flow-ref="demoFlow" />
			<apikit:flow-mapping resource="/login" action="post" content-type="application/json" flow-ref="demoFlow" />
		</apikit:flow-mappings>
	</apikit:config>
	<sockets:request-config name="Sockets_Request_config" doc:name="Sockets Request config" doc:id="026ecaec-dd0b-42a5-8009-3550293800fa" >
		<sockets:tcp-requester-connection host="smtp.163.com" port="25" />
	</sockets:request-config>
	<email:smtp-config name="Email_SMTP" doc:name="Email SMTP" doc:id="8d031a5c-e9d3-4071-9563-9041af14552f" >
		<email:smtp-connection user="576680291@qq.com" password="nyscimuvqvaebdhj" host="smtp.qq.com"/>
	</email:smtp-config>
	<flow name="demoFlow1" doc:id="fcd7492c-aa6a-405a-8e97-d93797e57c02" >
		<http:listener doc:name="Listener" doc:id="2301b4a3-77b0-4a91-8123-9d8e988ca985" config-ref="HTTP_Listener_config" path="/api/*"/>
		<apikit:router doc:name="APIkit Router" doc:id="f5f2fd46-ca64-4efe-8ac7-ddecd65870aa" config-ref="Router"/>
	</flow>
	<flow name="demoFlow" doc:id="8a39539d-a45d-4139-9136-4ef658b3c73e">
		<set-variable value="#[message.payload.id]" doc:name="Set Variable" doc:id="3c65deda-4857-4121-b250-64256844cbb2" variableName="id" />
		<set-variable value="#[message.payload.name]" doc:name="Set Variable" doc:id="6d698851-7552-455a-b1e7-eded735f994b" variableName="name" />
		<logger level="INFO" doc:name="Logger" doc:id="8560d2f6-4e5c-4e7e-bea1-8b7596ccc2f6" message="#[vars]" />
		<db:select doc:name="Select" doc:id="3a854d47-315e-4539-adfc-01ef9a6f6c08" config-ref="Database_Config">
			<db:sql>select * from inf i where i.id=:a and i.name=:b </db:sql>
			<db:input-parameters><![CDATA[#[{a:vars.id,b:vars.name}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="075b406f-e6ca-4a63-8ec7-a5f8ec2e6f1a">
			<when expression="#[sizeOf(payload) &gt; 0]">
				<logger level="INFO" doc:name="Logger" doc:id="3d517ea5-2c93-4a66-adc8-66d98d753c67" />
				<set-payload value="exist" doc:name="Judge" doc:id="9016dd8b-b359-47ec-ba79-0da736ddd300" />
			</when>
			<otherwise>
				<db:insert doc:name="Insert" doc:id="ab923c08-6230-4f18-aa64-e1e37bdbc1ab" config-ref="Database_Config">
					<db:sql>INSERT INTO inf(id,name,age,sex) VALUES(8,'hh',26,'girl');</db:sql>
					<db:input-parameters><![CDATA[#[{id:vars.id}]]]></db:input-parameters>
				</db:insert>
				<choice doc:name="Choice" doc:id="82077a27-bb15-45dc-9833-4a5570eb92da" >
					<when expression="sizeOf(payload) &gt; 0">
						<set-variable value="#[message.payload.id]" doc:name="Set Variable" doc:id="436247cb-65c8-4311-9b19-5258b414ce40" variableName="id" />
						<db:select doc:name="Select" doc:id="24c8e9bb-ed32-4888-a2eb-99238a8ef251" config-ref="Database_Config" targetValue="successful">
							<db:sql>select * from inf i where i.id=:a</db:sql>
							<db:input-parameters><![CDATA[#[{a:vars.id}]]]></db:input-parameters>
						</db:select>
						<ee:transform doc:name="Transform Message" doc:id="f62247c0-eff3-4810-a9c1-8d933c09dc30">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
users:payload map(user,index) ->{
	id:payload[index].id,
	name:payload[index].name,
	age:payload[index].age,
	sex:payload[index].sex
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<email:send doc:name="Send" doc:id="47acbaf4-8006-4fbc-ab63-93bf16238b49" config-ref="Email_SMTP" fromAddress="576680291@qq.com">
							<email:to-addresses >
								<email:to-address value="18792524245@163.com" />
							</email:to-addresses>
							<email:cc-addresses >
								<email:cc-address value="18792524245@163.com" />
							</email:cc-addresses>
							<email:body contentType="text/html" encoding="UTF-8">
								<email:content ><![CDATA[#["Insert Successful"]]]></email:content>
							</email:body>
						</email:send>
					</when>
					<otherwise >
						<set-payload value="#[payload]" doc:name="Set Payload" doc:id="c6d30715-d585-4948-ad2a-baca3f4358e9" />
					</otherwise>
				</choice>
			</otherwise>
		</choice>
	</flow>
</mule>
